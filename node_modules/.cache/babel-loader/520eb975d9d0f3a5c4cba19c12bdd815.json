{"ast":null,"code":"import { init } from \"@rematch/core\";\nimport immerPlugin from \"@rematch/immer\";\nimport models from \"./models\";\nvar immer = immerPlugin();\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      console.log(\"dispatching\", action);\n      action.x = 1;\n      var result = next(action);\n      console.log(\"next state\", store.getState());\n      return result;\n    };\n  };\n};\n\nvar store = init({\n  models: models,\n  plugins: [immer],\n  redux: {\n    middlewares: [logger]\n  }\n});\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["/Users/mariyasinoverska/Documents/studyFiles/js/beetrootAcademy/lesson_21/react-app/src/store.js"],"names":["init","immerPlugin","models","immer","logger","store","next","action","console","log","x","result","getState","plugins","redux","middlewares","window"],"mappings":"AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,KAAK,GAAGF,WAAW,EAAzB;;AAEA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;AACAA,MAAAA,MAAM,CAACG,CAAP,GAAW,CAAX;AACA,UAAIC,MAAM,GAAGL,IAAI,CAACC,MAAD,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAAK,CAACO,QAAN,EAA1B;AACA,aAAOD,MAAP;AACD,KAN2B;AAAA,GAAR;AAAA,CAApB;;AAQA,IAAMN,KAAK,GAAGL,IAAI,CAAC;AACjBE,EAAAA,MAAM,EAANA,MADiB;AAEjBW,EAAAA,OAAO,EAAE,CAACV,KAAD,CAFQ;AAGjBW,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,CAACX,MAAD;AADR;AAHU,CAAD,CAAlB;AAQAY,MAAM,CAACX,KAAP,GAAeA,KAAf;AACA,eAAeA,KAAf","sourcesContent":["import { init } from \"@rematch/core\";\nimport immerPlugin from \"@rematch/immer\";\n\nimport models from \"./models\";\n\nconst immer = immerPlugin();\n\nconst logger = store => next => action => {\n  console.log(\"dispatching\", action);\n  action.x = 1;\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  return result;\n};\n\nconst store = init({\n  models,\n  plugins: [immer],\n  redux: {\n    middlewares: [logger]\n  }\n});\n\nwindow.store = store;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}