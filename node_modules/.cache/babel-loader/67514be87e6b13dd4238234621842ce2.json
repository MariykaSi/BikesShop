{"ast":null,"code":"var cart = {\n  state: {\n    items: []\n  },\n  reducers: {\n    addProduct: function addProduct(state, product) {\n      var item = state.items.find(function (item) {\n        return item.product.id === product.id;\n      });\n\n      if (item) {\n        item.quantity += 1;\n      } else {\n        state.items.push({\n          product: product,\n          quantity: 1\n        });\n      }\n    },\n    removeProduct: function removeProduct(state, productId) {\n      state.items = state.items.filter(function (item) {\n        return item.product.id !== productId;\n      });\n    },\n    setQuantity: function setQuantity(state, productId, quantity) {\n      if (quantity === 0) {\n        state.items = state.items.filter(function (item) {\n          return item.product.id !== productId;\n        });\n      } else {\n        var item = state.items.find(function (item) {\n          return item.product.id === productId;\n        });\n        item.quantity = Number(quantity);\n      }\n    }\n  }\n};\nexport default cart;\nvar STORAGE_KEY = \"productsInCart\";\nexport function loadStateFromLocalStorage() {\n  var storageData = localStorage.getItem(STORAGE_KEY);\n  return JSON.parse(storageData) || cart.state;\n}\nexport function saveStateToLocalStorage(store) {\n  var cartState = store.getState().productsInCart;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(cartState));\n}","map":{"version":3,"sources":["/Users/mariyasinoverska/Documents/studyFiles/js/beetrootAcademy/myProject/bikes/src/models/cart.js"],"names":["cart","state","items","reducers","addProduct","product","item","find","id","quantity","push","removeProduct","productId","filter","setQuantity","Number","STORAGE_KEY","loadStateFromLocalStorage","storageData","localStorage","getItem","JSON","parse","saveStateToLocalStorage","store","cartState","getState","productsInCart","setItem","stringify"],"mappings":"AAAA,IAAMA,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GADI;AAIXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UADQ,sBACGH,KADH,EACUI,OADV,EACmB;AACzB,UAAMC,IAAI,GAAGL,KAAK,CAACC,KAAN,CAAYK,IAAZ,CAAiB,UAAAD,IAAI;AAAA,eAAIA,IAAI,CAACD,OAAL,CAAaG,EAAb,KAAoBH,OAAO,CAACG,EAAhC;AAAA,OAArB,CAAb;;AACA,UAAIF,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACG,QAAL,IAAiB,CAAjB;AACD,OAFD,MAEO;AACLR,QAAAA,KAAK,CAACC,KAAN,CAAYQ,IAAZ,CAAiB;AACfL,UAAAA,OAAO,EAAEA,OADM;AAEfI,UAAAA,QAAQ,EAAE;AAFK,SAAjB;AAID;AACF,KAXO;AAYRE,IAAAA,aAZQ,yBAYMV,KAZN,EAYaW,SAZb,EAYwB;AAC9BX,MAAAA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYW,MAAZ,CAAmB,UAAAP,IAAI;AAAA,eAAIA,IAAI,CAACD,OAAL,CAAaG,EAAb,KAAoBI,SAAxB;AAAA,OAAvB,CAAd;AACD,KAdO;AAeRE,IAAAA,WAfQ,uBAeIb,KAfJ,EAeWW,SAfX,EAesBH,QAftB,EAegC;AACtC,UAAIA,QAAQ,KAAK,CAAjB,EAAoB;AAClBR,QAAAA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYW,MAAZ,CAAmB,UAAAP,IAAI;AAAA,iBAAIA,IAAI,CAACD,OAAL,CAAaG,EAAb,KAAoBI,SAAxB;AAAA,SAAvB,CAAd;AACD,OAFD,MAEO;AACL,YAAMN,IAAI,GAAGL,KAAK,CAACC,KAAN,CAAYK,IAAZ,CAAiB,UAAAD,IAAI;AAAA,iBAAIA,IAAI,CAACD,OAAL,CAAaG,EAAb,KAAoBI,SAAxB;AAAA,SAArB,CAAb;AACAN,QAAAA,IAAI,CAACG,QAAL,GAAgBM,MAAM,CAACN,QAAD,CAAtB;AACD;AACF;AAtBO;AAJC,CAAb;AA6BA,eAAeT,IAAf;AAEA,IAAMgB,WAAW,GAAG,gBAApB;AACA,OAAO,SAASC,yBAAT,GAAqC;AAC1C,MAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,WAArB,CAAlB;AACA,SAAOK,IAAI,CAACC,KAAL,CAAWJ,WAAX,KAA2BlB,IAAI,CAACC,KAAvC;AACD;AAED,OAAO,SAASsB,uBAAT,CAAiCC,KAAjC,EAAwC;AAC7C,MAAIC,SAAS,GAAGD,KAAK,CAACE,QAAN,GAAiBC,cAAjC;AACAR,EAAAA,YAAY,CAACS,OAAb,CAAqBZ,WAArB,EAAkCK,IAAI,CAACQ,SAAL,CAAeJ,SAAf,CAAlC;AACD","sourcesContent":["const cart = {\n  state: {\n    items: []\n  },\n  reducers: {\n    addProduct(state, product) {\n      const item = state.items.find(item => item.product.id === product.id);\n      if (item) {\n        item.quantity += 1;\n      } else {\n        state.items.push({\n          product: product,\n          quantity: 1\n        });\n      }\n    },\n    removeProduct(state, productId) {\n      state.items = state.items.filter(item => item.product.id !== productId);\n    },\n    setQuantity(state, productId, quantity) {\n      if (quantity === 0) {\n        state.items = state.items.filter(item => item.product.id !== productId);\n      } else {\n        const item = state.items.find(item => item.product.id === productId);\n        item.quantity = Number(quantity);\n      }\n    }\n  }\n};\nexport default cart;\n\nconst STORAGE_KEY = \"productsInCart\";\nexport function loadStateFromLocalStorage() {\n  let storageData = localStorage.getItem(STORAGE_KEY);\n  return JSON.parse(storageData) || cart.state;\n}\n\nexport function saveStateToLocalStorage(store) {\n  let cartState = store.getState().productsInCart;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(cartState));\n}\n"]},"metadata":{},"sourceType":"module"}